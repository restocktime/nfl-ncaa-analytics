apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: football-analytics
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus/'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time=30d'
        - '--web.enable-lifecycle'
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-data
          mountPath: /prometheus/
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: football-analytics
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: football-analytics
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: football-analytics
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    scrape_configs:
    - job_name: 'api-gateway'
      static_configs:
      - targets: ['api-gateway-service:3000']
      metrics_path: /metrics
      scrape_interval: 10s
    
    - job_name: 'websocket-service'
      static_configs:
      - targets: ['websocket-service:8080']
      metrics_path: /metrics
      scrape_interval: 10s
    
    - job_name: 'probability-engine'
      static_configs:
      - targets: ['probability-engine-service:3002']
      metrics_path: /metrics
      scrape_interval: 10s
    
    - job_name: 'monte-carlo-service'
      static_configs:
      - targets: ['monte-carlo-service:3003']
      metrics_path: /metrics
      scrape_interval: 10s
    
    - job_name: 'ml-model-service'
      static_configs:
      - targets: ['ml-model-service:3004']
      metrics_path: /metrics
      scrape_interval: 10s
    
    - job_name: 'historical-stats-service'
      static_configs:
      - targets: ['historical-stats-service:3005']
      metrics_path: /metrics
      scrape_interval: 10s
    
    - job_name: 'data-ingestion-service'
      static_configs:
      - targets: ['data-ingestion-service:3001']
      metrics_path: /metrics
      scrape_interval: 10s
    
    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__